name: Integration tests
on:
  workflow_call:
    inputs:
      node_version_file:
        description: "Passed to setup-node action to specify where to source the version of node from"
        required: false
        type: string
        default: ".nvmrc"
permissions:
  contents: read
jobs:
  integration_test:
    runs-on: ubuntu-latest
    services:
      redis:
        image: redis:7.0
        ports:
          - 6379:6379
        options: --health-cmd="redis-cli ping" --health-interval=10s --health-timeout=5s --health-retries=5
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ inputs.node_version_file }}
        uses: actions/setup-node@v4
        with:
          node-version-file: ${{ inputs.node_version_file }}
      - name: download artifacts
        uses: actions/download-artifact@v4
        with:
          name: npm_build_artifacts
      - name: restore cache
        id: restore-cache
        uses: actions/cache/restore@v4
        env:
          cache-name: node-modules
        with:
          path: |
            ./node_modules
            ~/.cache/Cypress
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json', '!**/node_modules/**') }}
      - name: Init testing framework if necessary
        run: npm run int-test-init:ci --if-present
      - name: Get wiremock
        shell: bash
        run: |
          curl -o wiremock.jar https://repo1.maven.org/maven2/org/wiremock/wiremock-standalone/3.9.1/wiremock-standalone-3.9.1.jar
      - name: Prepare and run integration tests
        id: integration-tests
        shell: bash
        env:
          MS_USERNAME: ${{ secrets.MS_USERNAME }}
          MS_PASSWORD: ${{ secrets.MS_PASSWORD }}
          SYSTEM_CLIENT_ID: ${{ secrets.SYSTEM_CLIENT_ID }}
          SYSTEM_CLIENT_SECRET: ${{ secrets.SYSTEM_CLIENT_SECRET }}
          LAUNCHPAD_API_CLIENT_ID: ${{ secrets.LAUNCHPAD_API_CLIENT_ID }}
          LAUNCHPAD_API_CLIENT_SECRET: ${{ secrets.LAUNCHPAD_API_CLIENT_SECRET }}
          SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
          HOST: 0.0.0.0
          PORT: 3000
        run: |
          nohup java -jar wiremock.jar --port 9091 &
          nohup npm run start-feature &
          sleep 10
          # Wait up to 90 seconds for the server to be ready
          npx wait-on http://localhost:3000 --timeout 90000

          # If wait-on fails, do a simple retry loop with curl (max 3 tries)
            if ! curl -sf http://localhost:3000 > /dev/null; then
            echo "Initial wait-on failed, retrying manually..."
          for i in 1 2 3; do
          sleep 5
            if curl -sf http://localhost:3000 > /dev/null; then
              echo "Server became ready on retry $i"
              break
            fi
            if [ "$i" -eq 3 ]; then
              echo "Server never became ready, exiting..."
              exit 1
            fi
          done
        fi
        # Run your tests after server is confirmed ready
        npm run int-test
      - name: upload results
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: npm_integration_test_artifacts
          path: |
            integration_tests/videos/
            integration_tests/screenshots/
            coverage/
            test_results/
            ctrf/
      - name: publish test report
        if: ${{ !cancelled() && github.event.repository.visibility == 'public' }}
        uses: dorny/test-reporter@v2
        with:
          artifact: npm_integration_test_artifacts
          name: Test Report
          path: 'test_results/**/*.xml'
          reporter: java-junit
          fail-on-empty: false
          fail-on-error: false
          list-suites: 'failed'
          list-tests: 'failed'
      - name: fail the action if the tests failed
        if: ${{ steps.integration-tests.outcome == 'failure' }}
        uses: actions/github-script@v7
        with:
          script: |
            core.setFailed('Integration tests failed')
